-- Qualification

SELECT q.lga_code16 AS Code, LGAs.lga_name16 AS Name, SUM(q.count) AS Indig_Qual
FROM QualificationStatistics AS q JOIN LGAs ON q.lga_code16 = LGAs.lga_code16
WHERE q.indigenous_status = 'indig'
GROUP BY q.lga_code16;

-- State table 
CREATE TABLE IF NOT EXISTS State (
    stateName TEXT NOT NULL,
    stateCode INT NOT NULL);

INSERT INTO State (stateName, stateCode)
VALUES  ('New South Wales', 1),
        ('Victoria', 2),
        ('Queensland', 3),
        ('South Australia', 4),
        ('Western Australia', 5),
        ('Tasmania', 6),
        ('Northern Territory', 7),
        ('Australian Capital Territory', 8),
        ('Other Australian Territories', 9);

-- Example query for state queries
SELECT SUM(count) AS count,
       stateName
  FROM PopulationStatistics
       JOIN
       State ON substr(lga_code16, 1, 1) = State.stateCode
 WHERE indigenous_status = 'indig' AND 
       age = '_0_4'
 GROUP BY substr(lga_code16, 1, 1);

-- In the code above, we can implement different statewide queries by changing the WHERE clause

-- Here I am attempting to save the data for outcome 5's metric as a view, then operating on it for the proportion using SQLite
CREATE VIEW Indig_Y12 AS
    SELECT ss.lga_code16 AS Code,
           SUM(ss.count) AS Total
      FROM SchoolStatistics AS ss
     WHERE ss.School = 'y12_equiv' AND 
           ss.indigenous_status = 'indig'
     GROUP BY ss.lga_code16,
              ss.School;

CREATE VIEW All_Y12 AS
    SELECT ss.lga_code16 AS Code,
           SUM(ss.count) AS Total
      FROM SchoolStatistics AS ss
     WHERE ss.School = 'y12_equiv'
     GROUP BY ss.lga_code16,
              ss.School;

SELECT a.Code,
       ROUND (CAST (i.Total AS REAL) / CAST (a.Total AS REAL) * 100, 2) AS Proportion
  FROM All_Y12 AS a
       JOIN
       Indig_Y12 AS i ON a.Code = i.Code;

-- This query will return in hookup format, a proportion of y12 indidgenous students to all y12 students

SELECT a.Code as lgaCode, ROUND (CAST (i.Total AS REAL) / CAST (a.Total AS REAL) * 100, 2) AS value, LGAs.lga_name16 AS lgaName FROM All_Y12 AS a JOIN Indig_Y12 AS i ON a.Code = i.Code JOIN LGAs ON a.code = LGAs.lga_code16;

-- This query will return in hookup format, a raw value of y12 indigenous students per state
SELECT substr(LGAs.lga_code16, 1, 1) AS stateCode, SUM(Indig_Y12.total) as value, State.stateName as stateName FROM Indig_Y12 JOIN LGAs on Indig_Y12.Code = LGAs.lga_code16 JOIN State on substr(LGAs.lga_code16, 1, 1) = stateCode GROUP BY substr(LGAs.lga_code16, 1, 1)


-- Select all indig above 15 years old per lga
SELECT p.lga_code16 AS lgaCode, LGAs.lga_name16 AS lgaName, SUM(p.count) AS value
FROM PopulationStatistics AS p JOIN LGAs ON p.lga_code16 = LGAs.lga_code16
WHERE p.indigenous_status = 'indig' and p.age <> '_0_4' AND p.age <> '_5_9' AND p.age <> '_10_14'
GROUP BY p.lga_code16;

-- Select the percentage of qualified indig above 15 years old per lga
SELECT q.lga_code16 AS lgaCode, LGAs.lga_name16 AS lgaName, SUM(q.count) AS qValue, pop.pValue AS pValue, CAST (SUM(q.count) AS FLOAT)/pop.pValue * 100 AS "Percent Qual"
FROM QualificationStatistics AS q JOIN LGAs ON q.lga_code16 = LGAs.lga_code16 JOIN 
    (SELECT p.lga_code16 AS lgaCode, SUM(p.count) AS pValue
    FROM PopulationStatistics AS p 
    WHERE p.indigenous_status = 'indig' and p.age <> '_0_4' AND p.age <> '_5_9' AND p.age <> '_10_14'
    GROUP BY p.lga_code16) AS pop ON q.lga_code16 = pop.lgaCode
WHERE q.indigenous_status = 'indig' 
GROUP BY q.lga_code16;